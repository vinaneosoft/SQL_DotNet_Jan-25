Q. Show Empoyees with their department names
/*Equi Join*/
select employees_id, first_name, dept_code, D_CODE,D_NAME
from employees, departments
where  dept_code=D_CODE


Q. if same column name, how to qualify a column with table name or table alias

/*column ambiguously defined*/
select employees_id, first_name, dept_code,dept_code,D_NAME
from departments2,employees
where  dept_code=dept_code

select employees_id, first_name, employees.dept_code,departments2.dept_code,D_NAME
from departments2,employees
where  employees.dept_code=departments2.dept_code

select employees_id, first_name, emp.dept_code,dept.dept_code,D_NAME
from departments2 dept,employees emp
where  emp.dept_code=dept.dept_code
    
select emp.employees_id, emp.first_name, emp.dept_code,dept.dept_code,dept.D_NAME
from departments2 dept,employees emp
where  emp.dept_code=dept.dept_code


Q. Show Employees with their department details where departments which having lower budget among all
select employees_id, first_name, emp.dept_code,dept.dept_code,D_NAME, d_budget
from departments2 dept,employees emp
where  emp.dept_code=dept.dept_code and d_budget= (select min(D_BUDGET) from departments2)
    
Q. Show Employee details where departments having lower budget among all
select employees_id, first_name, dept_code
from employees
where dept_code in ( select dept_code from departments2 where d_budget= (select min(D_BUDGET) from departments2))
   
/*select min(D_BUDGET) from departments2
select dept_code from departments2 where d_budget= (select min(D_BUDGET) from departments2)*/



select * from departments2
Q show employees with their department names using outer join (join), inner join
    it will not show those employees which are not working in any department
    it will not show those department where no any employee working
    
select emp.employees_id, emp.first_name, emp.dept_code,dept.dept_code,dept.D_NAME
from departments2 dept join employees emp
on  emp.dept_code=dept.dept_code

select emp.employees_id, emp.first_name, emp.dept_code,dept.dept_code,dept.D_NAME
from departments2 dept inner join employees emp
on  emp.dept_code=dept.dept_code
    
Note : driving : less number of rows and driven:more number of rows

Note : oracle join, left outer join, right outer join, full outer join, inner join

    
Q. Show employees not working in any department
select employees_id, first_name, dept_code
from employees where dept_code is null

Q. Show Departments where no any employee working
select d_name, dept_code 
from departments2
where dept_code not in (select distinct dept_code from employees where dept_code is not null )  
same with Set Operations

Q show employees with their department names who working to deparment
   Also show those employees which are not working in any department
    
select emp.employees_id, emp.first_name, emp.dept_code,dept.dept_code,dept.D_NAME
from   employees emp  left outer join  departments2 dept
on  emp.dept_code=dept.dept_code

    
select emp.employees_id, emp.first_name, emp.dept_code,dept.dept_code,dept.D_NAME
from   employees emp  left join  departments2 dept
on  emp.dept_code=dept.dept_code

select *
from   employees emp  left join  departments2 dept
on  emp.dept_code=dept.dept_code
    

Q show employees with their department names who working in department
   Also show deparments wehre no any employee working
    
select emp.employees_id, emp.first_name, emp.dept_code,dept.dept_code,dept.D_NAME
from   employees emp  right outer join  departments2 dept
on  emp.dept_code=dept.dept_code

select emp.employees_id, emp.first_name, emp.dept_code,dept.dept_code,dept.D_NAME
from   departments2 dept  left outer join  employees emp
on  emp.dept_code=dept.dept_code


Q show employees with their department names who working in department
   Also show deparments where no any employee working
       Also show employees not working in any department
select emp.employees_id, emp.first_name, emp.dept_code,dept.dept_code,dept.D_NAME
from   departments2 dept  full outer join  employees emp
on  emp.dept_code=dept.dept_code

note :  equi join, inner join, join = same result   
=, inner join, join

left outer join === left join

right outer join == right join

full outer join == full join

/*natural join : default common column : fk col name and pk col name must be same
    on clause not needed, qualifier for ambigous column not needed*/
select employees_id, first_name, dept_code, d_name
from   employees emp natural join  departments2 dept

Note : when natural join fails to find common column between table then it will make all possible matches
    from all rows of 1 table to all rows of another tables
select employees_id, first_name, dept_code, d_code, d_name
from   employees emp natural join  departments dept
order by employees_id

    

Q. Show projection where every employee has worked with every department

select employees_id, first_name, e.dept_code, d.dept_code, d_name
from employees e cross join departments2 d

Q. Show name of managers of all employees
select emp.employee_id, emp.first_name, emp.manager_id, mgr.employee_id,mgr.first_name
from neoemployees emp inner join neoemployees mgr
on  emp.manager_id=mgr.employee_id




Q. Show name of managers of all employees. Also show employees having no manager
select emp.employee_id, emp.first_name, emp.manager_id, mgr.employee_id,mgr.first_name
from neoemployees emp  left join neoemployees mgr
on  emp.manager_id=mgr.employee_id;


Q. Show name of managers of all employees. Also show employees who are not working as manager
select emp.employee_id, emp.first_name, emp.manager_id, mgr.employee_id,mgr.first_name
from neoemployees emp  right join neoemployees mgr
on  emp.manager_id=mgr.employee_id;


Q. Show name of managers of all employees.
    Also show employees having no manager
Also show employees who are not working as manager
select emp.employee_id, emp.first_name, emp.manager_id, mgr.employee_id,mgr.first_name
from neoemployees emp  full join neoemployees mgr
on  emp.manager_id=mgr.employee_id;


Q. Show all employees from singing and dancing committee
select * from  committee_members
    where com_id='sing' or com_id='dance' 

select employees_id, e.first_name, com_id, c.com_name 
    from   committee c natural join committee_members cm natural join employees e
    where com_id='sing' or com_id='dance' 
/* same name col must not have qualifier: natural join */

Q. Show employee ids added in any committee : join
select employees_id, e.first_name, com_id, c.com_name 
    from   committee c natural join committee_members cm natural join employees e
    
    

Self join : using view : named query : 


create or replace view emps as 
select employee_id, first_name, manager_id
from  neoemployees;

select * from emps;


/*emps view is present in the database : virtual table : saved */
select emp.*,mgr.first_name
from  emps emp inner join neoemployees mgr
on  emp.manager_id=mgr.employee_id;

CTE

/*CTE are present in the query : virtual result sets : not saved in DB */
WITH TEMP_EMPS AS (
    SELECT employee_id, first_name,manager_id
    FROM neoemployees
)
select temp.*,mgr.first_name
from  TEMP_EMPS temp inner join neoemployees mgr
on  temp.manager_id=mgr.employee_id;


