Annonymous Block :
    1. declaration (optional)
    2. Execution section (mandatory)
    3. exception section (optional)

/*execution section*/
BEGIN
  DBMS_OUTPUT.PUT_LINE('Hello World!' );
END;




/*declaration section and execution section*/
DECLARE
    l_myname varchar(20):='Vina';
BEGIN
  	DBMS_OUTPUT.PUT_LINE( 'My name is ' || l_myname );
	l_myname:='Veena';
	DBMS_OUTPUT.PUT_LINE( 'My name is ' || l_myname );
END;

DECLARE
    l_myname varchar(20)  DEFAULT 'Vina';
BEGIN
  	DBMS_OUTPUT.PUT_LINE( 'My name is ' || l_myname );
	l_myname:='Veena';
	DBMS_OUTPUT.PUT_LINE( 'My name is ' || l_myname );
END;

/*below block gives error due to not null constraint*/

DECLARE
    l_myname varchar(20) NOT NULL:='Vina' ;
BEGIN
  	DBMS_OUTPUT.PUT_LINE( 'My name is ' || l_myname );
	l_myname:='';
	DBMS_OUTPUT.PUT_LINE( 'My name is ' || l_myname );
END;


/*declaration section and execution section and exception section*/


DECLARE
    num1 number(20) :=34;
	num2 number(20):=0;
	result number(20);
BEGIN
	DBMS_OUTPUT.PUT_LINE( '1st number is :' || num1 );  
	DBMS_OUTPUT.PUT_LINE( '2nd number is :' || num2 ); 
	result:=num1/num2;    
    EXCEPTION
      WHEN ZERO_DIVIDE THEN
         DBMS_OUTPUT.PUT_LINE( SQLERRM );
    DBMS_OUTPUT.PUT_LINE('message after handling');
END;




DECLARE
    num1 number(20) :=34;
	num2 number(20):=2;
	result number(20);
BEGIN
	DBMS_OUTPUT.PUT_LINE( '1st number is :' || num1 );  
	DBMS_OUTPUT.PUT_LINE( '2nd number is :' || num2 ); 
	if num2 != 0 then
       		 result:=num1/num2;   
		DBMS_OUTPUT.PUT_LINE('Division is ' || result);
    	else
		 DBMS_OUTPUT.PUT_LINE('Divider is 0.');
  	end if;
END;



DECLARE
    l_join_date DATE:='15-JUN-2000';
BEGIN
  	DBMS_OUTPUT.PUT_LINE( 'Joining date: ' || l_join_date );
END;


DECLARE
    l_join_date DATE:=to_date('15-JUN-2000 10:30:00', 'DD-MON-YYYY HH12:MI:SS a.m.');
BEGIN
  	DBMS_OUTPUT.PUT_LINE( 'Joining date: ' || l_join_date );
	DBMS_OUTPUT.PUT_LINE( 'Joining date: ' || to_char(l_join_date,'DD-MON-YYYY HH12:MI:SS a.m.') );
END;


/*sysdate : remote server system date*/
declare 
l_join_date date :=sysdate;
begin
 DBMS_OUTPUT.PUT_LINE('Current date and time in Kolkata: ' || TO_CHAR(FROM_TZ(CAST(l_join_date AS TIMESTAMP), 'UTC') AT TIME ZONE 'Asia/Kolkata', 'DD-MON-YYYY HH12:MI:SS a.m.'));
end;



DECLARE
   l_emp_id      employees.EMPLOYEES_ID%type;
   l_details    varchar(25);
BEGIN
    select EMPLOYEES_ID, employees_id || employees_id
    into  l_emp_id,l_details
    from employees
    where employees_id=121;
	DBMS_OUTPUT.PUT_LINE(l_emp_id || ' has name ' || l_details );
	DBMS_OUTPUT.PUT_LINE(l_emp_id );
END;




DECLARE
   l_emp_id      employees.EMPLOYEES_ID%type;
   l_emp_name   employees.first_name%type;
BEGIN
    select EMPLOYEES_ID, first_name || ' ' || last_name
    into  l_emp_id,l_emp_name
    from employees
    where employees_id=121;
	DBMS_OUTPUT.PUT_LINE(l_emp_id || ' has name ' ||  l_emp_name   );
	
END;


DECLARE
   l_emp_id      employees.EMPLOYEES_ID%type;
   l_details     employees.dept_code%type;
BEGIN
    select EMPLOYEES_ID, (age || age) 
    into  l_emp_id, l_details
    from employees
    where employees_id=121;
	DBMS_OUTPUT.PUT_LINE(l_details *2 );
	exception
        when value_error then
            DBMS_OUTPUT.PUT_LINE('invalid data');
    		DBMS_OUTPUT.PUT_LINE('invalid data');
	DBMS_OUTPUT.PUT_LINE(l_emp_id || ' has name ' || l_details );
END;


DECLARE
   l_emp_id      employees.EMPLOYEES_ID%type;
   l_details     employees.dept_code%type;
BEGIN
    select EMPLOYEES_ID, (age || dept_code) 
    into  l_emp_id, l_details
    from employees
    where employees_id=121;
	DBMS_OUTPUT.PUT_LINE(l_emp_id || ' has name ' || l_details );
	DBMS_OUTPUT.PUT_LINE(l_details *2 );
	DBMS_OUTPUT.PUT_LINE(67/0);
	exception
        when value_error then
            DBMS_OUTPUT.PUT_LINE('invalid data');
    	when zero_divide then 
             DBMS_OUTPUT.PUT_LINE('invalid division');
		when others then 
             DBMS_OUTPUT.PUT_LINE('other exception');
END;



DECLARE
   l_emp_id employees.EMPLOYEES_ID%type :=121;
   l_d_id    employees.dept_code%type;
BEGIN
    select dept_code
    into l_d_id 
    from employees
    where employees_id=l_emp_id;
	DBMS_OUTPUT.PUT_LINE('employee with id ' || l_emp_id || ' working in  ' || l_d_id ||' department' );
END;

DECLARE
   l_emp_id employees.EMPLOYEES_ID%type :=121;
   l_d_id    employees.dept_code%type;
 	l_fname    employees.first_name%type;
BEGIN
    select dept_code, first_name
    into l_d_id , l_fname
    from employees
    where employees_id=l_emp_id;
	DBMS_OUTPUT.PUT_LINE('employee with id ' || l_emp_id || ' and name ' || l_fname || ' working in  ' || l_d_id ||' department' );
END;


BEGIN
  FOR l_counter IN 1..5
  LOOP
    DBMS_OUTPUT.PUT_LINE( l_counter );
  END LOOP;
END;



DECLARE
    l_counter NUMBER := 1;
BEGIN
    LOOP
        DBMS_OUTPUT.PUT_LINE( l_counter);
        l_counter := l_counter + 2;
        EXIT WHEN l_counter > 5; 
    END LOOP;
END;


DECLARE
    l_counter NUMBER := 1;
BEGIN
    LOOP
        DBMS_OUTPUT.PUT_LINE( l_counter);
        l_counter := l_counter + 2;
		if l_counter > 5 then
        	EXIT ; 
		end if;
    END LOOP;
END;


BEGIN
  FOR i IN 1..5
  LOOP
   	FOR j IN 1..5
     LOOP
    	DBMS_OUTPUT.PUT_LINE( j );
    END LOOP;
  END LOOP;
END;

