select EMPLOYEES_ID, SALARY,COMMISSION from  employees; : save VIEW : empsalaries : EMPLOYEES_ID, SALARY,COMMISSION 
virtual table : act like table : named query : actual table result
insert, update, delete : yes
read only
check 

CREATE VIEW empsalaries AS
SELECT
    employees_id,SALARY,COMMISSION 
FROM
    employees;


insert into empsalaries values(890, 78000,2300);
insert into empsalaries(SALARY,COMMISSION ) values(78000,2300);

/*if u r inserting new record via view, then null added for those column which are not present in view.
if column contains not null constraint then error, if column contains default value them def value gets added */

Q. create a view to store employees with their cities from SM department

create view SMemployees as
    select employees_id, city
    from employees
    where dept_code='SM';

select * from SMemployees;

update SMemployees set city='sangli';
select * from SMemployees;
select * from employees order by dept_code;

insert into SMemployees(employees_id) values(1000);
insert into SMemployees values(1002,'kolhapur');


Q. Show from which different cities SM employees coming

select distinct lower(trim(city)) from SMemployees;

Q. Store max salary of every deparment in view

create view dept_maxsalary(max_salary, d_code) as    
    select max(salary),dept_code 
        from employees
        group by dept_code;

create view dept_maxsalary2 as    
    select max(salary) max_sal ,dept_code  
        from employees
        group by dept_code;

insert into dept_maxsalary values(67000, 'JS') /* virtual column not allowed */
insert into dept_maxsalary(max_salary) values(56000); /* virtual column not allowed */
insert into dept_maxsalary(d_code) values( 'JS'); /* error */


Q. Who is taking heighest salary in their department

select employees_id, dept_code, salary
from employees 
where salary= (select max_salary
    from  dept_maxsalary
    where d_code = employees.dept_code
);

    dept_maxsalary /*view name*/
max_salary, d_code  /*view columns*/


create or replace view emp_experience as
SELECT 
    employee_id,
    dept_code,
    round(MONTHS_BETWEEN(SYSDATE, join_date) / 12) AS exp_in_years,
    round(MONTHS_BETWEEN(SYSDATE, join_date)) AS exp_in_months,
    round(sysdate-join_date) as exp_in_days
FROM 
    neoemployees ;

select * from emp_experience;

desc EMP_EXPERIENCE;
/*view dept_maxexp is dependant on view exp_experience*/
create or replace view dept_maxexp as
select max(EXP_IN_YEARS) max_exp_years,max(EXP_IN_MONTHS) max_exp_months, max(exp_in_days) max_exp_days, DEPT_CODE
from EMP_EXPERIENCE  
group by DEPT_CODE;


insert into emp_experience( employee_id,dept_code) values(1003,'JS'); /*error : parent key not found*/
insert into emp_experience( employee_id,dept_code) values(1003,'RST');

drop view emp_experience;
select * from dept_maxexp;  /*view "DEPT_MAXEXP" has errors*/

Q. Who (id) is having highest experience in their department?

employees : experience calcuate no use
correlated sq:   emp_experience,   dept_maxexp both are views
select employee_id, dept_code, exp_in_years
from emp_experience 
where  exp_in_days=(
    select max_exp_days from dept_maxexp
    where emp_experience.dept_code=dept_maxexp.DEPT_CODE
)
order by dept_code;


Q. Store employee id, name and their dept id and name in view full join

desc employees;
desc departments;
create view emps_dpts as
select e.employees_id,e.first_name,e.last_name,d.d_code,d.d_name
from employees e full join departments d
on e.dept_code=d.d_code;



Q. In which department, no any employee working?
select D_CODE, D_NAME from emps_dpts  where employees_id is null;

select d_code, d_name from departments
where d_code not in (select distinct dept_code from employees where dept_code is not null)
Note : in (4566 , 3436, null) : compare issue : no data found


Q. employee_id, first_name, dept_code   : view
create view emps as
select employees_id,first_name,dept_code 
from employees;
Q. d_code, d_name, d_budget : view
create view depts as
    select d_code,d_name, d_budget from departments;

select * from emps e join depts e1 on e.dept_code =e1.d_code;

delete from depts where d_code='SM';

drop view depts;


alter view depts
compile;




create or replace view depts as
    select d_code,d_name
    from departments with read only;

The WITH READ ONLY clause prevents the underlying tables from changing through the view.
insert into depts values('JS', 'Javascript'); /*cannot perform a DML operation on a read-only view */

   


    create or replace view HRemployees as
    select employees_id, first_name, last_name,city, dept_code
    from employees
    where dept_code='HR' with check option;

insert into HRemployees values(9999,'Suhas', 'Patil', 'satara', 'HR');
insert into HRemployees values(3434,'Harish', 'Patil', 'satara', 'LD'); /*error*/



    create or replace view HRemployees as
    select *
    from employees
    where dept_code='HR' and salary>70000 with check option;

insert into HRemployees values(1212,'mona', 'Patil', 'satara',56, 72000,10000,'LD'); /*error*/
insert into HRemployees values(6767,'Suhas', 'Patil', 'satara',56, 71000,10000,'HR'); 


    create or replace view HRemployees as
    select *
    from employees
    where dept_code='HR' or salary>70000 with check option;

insert into HRemployees values(1212,'mona', 'Patil', 'satara',56, 72000,10000,'LD'); 



create or replace view dept_maxexp as
select max(EXP_IN_YEARS) max_exp_years,max(EXP_IN_MONTHS) max_exp_months, max(exp_in_days) max_exp_days, DEPT_CODE
from (
    SELECT 
    employee_id,
    dept_code,
    round(MONTHS_BETWEEN(SYSDATE, join_date) / 12) AS exp_in_years,
    round(MONTHS_BETWEEN(SYSDATE, join_date)) AS exp_in_months,
    round(sysdate-join_date) as exp_in_days
FROM 
    neoemployees
)
group by DEPT_CODE;
/* dept_maxexp : real view 
from () : inline view*/





Q. Manipulation on inline views
delete from (select employees_id, salary from employees where dept_code='HR') where salary<=70000




